from datetime import date


def test_get_shift_returns_all_shifts(client):

    # Expected output (generated by src/shifts/app/load_init_data.py)
    # [{
    #     "shift_date": "2022-06-24",
    #     "shift_slot": 1,
    #     "id": 1,
    #     "workers": [
    #     {
    #         "worker_id": 1,
    #         "shift_id": 1,
    #         "shift_date": "2022-06-24"
    #     }
    #     ]
    # },
    # {
    #     "shift_date": "2022-06-24",
    #     "shift_slot": 2,
    #     "id": 2,
    #     "workers": []
    # },
    # ...
    # ]

    # Set up
    session, api_url = client
    url = f"{api_url}/shifts/"

    # Exercise
    res = session.get(url=url)

    # Verify
    res_json = res.json()
    assert res.status_code == 200
    assert len(res_json) == 21
    assert res_json[0]["id"] == 1
    assert res_json[0]["shift_date"] == date.today().strftime("%Y-%m-%d")
    assert res_json[0]["shift_slot"] == 1
    assert res_json[0]["workers"][0]["worker_id"] == 1
    assert res_json[0]["workers"][0]["shift_id"] == 1
    assert res_json[0]["workers"][0]["shift_date"] == date.today().strftime("%Y-%m-%d")


def test_get_shift_returns_one_shifts(client):

    # Expected output
    # {
    #     "shift_date": "2022-06-24",
    #     "shift_slot": 1,
    #     "id": 1,
    #     "workers": [
    #     {
    #         "worker_id": 1,
    #         "shift_id": 1,
    #         "shift_date": "2022-06-24"
    #     }
    #     ]
    # }

    # Set up
    session, api_url = client
    url = f"{api_url}/shifts/1"

    # Exercise
    res = session.get(url=url)

    # Verify
    res_json = res.json()
    assert res.status_code == 200
    assert res_json["id"] == 1
    assert res_json["shift_date"] == date.today().strftime("%Y-%m-%d")
    assert res_json["shift_slot"] == 1
    assert res_json["workers"][0]["worker_id"] == 1
    assert res_json["workers"][0]["shift_id"] == 1
    assert res_json["workers"][0]["shift_date"] == date.today().strftime("%Y-%m-%d")


def test_get_non_existent_shift_returns_404(client):

    # Expected output
    # {'detail': 'Not Found'}

    # Set up
    session, api_url = client
    url = f"{api_url}/shift/100"

    # Exercise
    res = session.get(url=url)

    # Verify
    res_json = res.json()
    print(res_json)
    assert res.status_code == 404
    assert res_json["detail"] == "Not Found"
