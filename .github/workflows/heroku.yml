# .github/workflows/pytest.yml
name: pytest and heroku deployment
on: push

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install Poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | POETRY_HOME=/opt/poetry python && \
          cd /usr/local/bin && \
          ln -s /opt/poetry/bin/poetry && \
          poetry config virtualenvs.create false

      - name: Install dependencies and run tests
        working-directory: ./src/shifts
        run: |
          poetry install --no-root && \
          poetry run pytest -v tests

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Heroku container login
        working-directory: ./
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:login

      - name: Build docker image
        working-directory: ./
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          docker buildx build --platform linux/amd64 -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web ./src

      - name: Push docker image to registry
        working-directory: ./
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

      - name: Check out repository code
        working-directory: ./
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}
